# docker-compose.yml – Northwind stack + SonarQube

volumes:
  postgres-data:
  redis-data:
  neo4j-data:
  export-data:

services:
  # ────────────── PostgreSQL ────────────── #
  postgres:
    image: postgres:16-alpine
    container_name: pg_northwind
    environment:
      POSTGRES_DB: northwind
      POSTGRES_USER: northwind
      POSTGRES_PASSWORD: northwind
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "northwind"]
      interval: 5s
      retries: 10

  # ────────────── Redis ────────────── #
  redis:
    image: redis/redis-stack:latest
    container_name: redis_kv
    command:
      - redis-stack-server
      - --requirepass
      - northwind
      - --protected-mode
      - "no"
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "northwind", "ping"]
      interval: 5s
      retries: 10

  redis-seed:
    image: redis/redis-stack:latest
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - export-data:/export
      - redis-data:/data
      - ./docker/redis/init:/seed
    entrypoint:
      - sh
      - -euc
      - |
        if [ ! -f /data/.seed_done ]; then
          echo "→  Converting to seed.redis"
          apt-get update -qq && apt-get install -y -qq jq wget
          /seed/fetch.sh
          /seed/build_seed.sh /seed/northwind.json /seed/seed.redis
          echo "⏳  Loading into Redis"
          redis-cli -h redis -p 6379 -a northwind < /seed/seed.redis
          touch /data/.seed_done
          echo "✅  Redis seeded"
        else
          echo "ℹ️  Redis already seeded"
        fi

  # ────────────── Neo4j ────────────── #
  neo4j:
    image: neo4j:5-community
    container_name: neo4j_graph
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_apoc_import_file_enabled: "true"
    volumes:
      - neo4j-data:/data
    ports:
      - "7687:7687"
      - "7474:7474"
    healthcheck:
      test: ["CMD-SHELL", "cypher-shell -u neo4j -p password 'RETURN 1' || exit 1"]
      interval: 10s
      retries: 15

  neo4j-seed:
    image: neo4j:5-community
    depends_on:
      neo4j:
        condition: service_healthy
    volumes:
      - ./docker/neo4j/init:/seed
      - neo4j-data:/data
    entrypoint:
      - sh
      - -c
      - |
        /seed/fetch.sh
        if [ ! -f /data/.seed_done ]; then
          cypher-shell -a bolt://neo4j:7687 -u neo4j -p password -f /seed/seed.cypher
          touch /data/.seed_done
        fi