name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    # use docker-compose instead of individual service blocks
    services:
      compose:
        image: docker/compose:debian-1.29  # tiny wrapper image with docker-compose
        options: >-
          -v /var/run/docker.sock:/var/run/docker.sock
          -v ${{ github.workspace }}:/workspace
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
        command: >
          sh -c "
            cd /workspace &&
            docker-compose up -d &&
            docker-compose ps
          "

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      # ---------- cache Poetry virtualenv ----------
      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          pip install -U pip
          pip install poetry

      - name: Install dependencies
        run: |
          poetry install --with dev

      # ---------- wait for healthchecks ----------
      - name: Wait for DBs to be healthy
        run: |
          docker-compose ps
          docker-compose logs --no-color postgres redis neo4j

      # ---------- lint & tests ----------
      - name: Lint & test
        run: |
          poetry run black --check .
          poetry run flake8 .
          poetry run pytest -q --cov=polyfuseql --cov-report=xml

      # ---------- coverage upload ----------
      - name: Upload coverage
        uses: codecov/codecov-action@v4

