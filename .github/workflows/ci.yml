name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ---------- checkout ----------
      - uses: actions/checkout@v4

      # ---------- Python + Poetry ----------
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Cache Poetry envs
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          pip install -U pip
          pip install poetry

      # ---------- Docker Compose stack ----------
      - name: Install docker-compose v2
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y docker-compose-plugin   # provides `docker compose`

      - name: Launch DB stack
        run: |
          docker compose version          # verify plugin
          docker compose up -d            # uses repo's docker-compose.yml

      # optional: quick check that services are healthy
      - name: Show compose status
        run: |
          docker compose ps
          docker compose logs --tail=50

      # ---------- install deps ----------
      - name: Install project dependencies
        run: |
          poetry install --with dev

      # ---------- lint & tests ----------
      - name: Lint & test
        run: |
          poetry run black --check .
          poetry run flake8 .
          poetry run pytest -q --cov=polyfuseql --cov-report=xml

      # ---------- coverage ----------
      - name: Upload coverage
        uses: codecov/codecov-action@v4
