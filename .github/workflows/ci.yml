name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # ───────────────────────────  Checkout  ──────────────────────────── #
    - uses: actions/checkout@v4

    # ───────────────  Start full docker-compose stack  ──────────────── #
    - name: Compose up
      uses: hoverkraft-tech/compose-action@v2.0.1
      with:
        compose-file: docker-compose.yml     # default is ./docker-compose.yml
        up-flags: --build -d                 # similar to `docker compose up --build -d`
        # down-flags: --volumes              # add if you want volumes wiped
      # If you need env vars for Compose, add `env:` here.

    # Optional: show service list & last log lines (handy for CI debugging)
    - name: Show compose status
      run: |
        docker compose ps
        docker compose logs --tail=50

    # ───────────────────────────  Python & Poetry  ───────────────────── #
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Cache Poetry envs
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pypoetry
          ~/.virtualenvs
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install Poetry
      run: |
        pip install -U pip
        pip install poetry

    - name: Install dependencies
      run: poetry install --with dev

    # ────────────────────────  Lint & Test  ──────────────────────────── #
    - name: Lint & test
      run: |
        poetry run black --check .
        poetry run flake8 .
        poetry run pytest -q --cov=polyfuseql --cov-report=xml

    # ────────────────────  Upload coverage to Codecov  ───────────────── #
    - name: Upload coverage
      uses: codecov/codecov-action@v4
